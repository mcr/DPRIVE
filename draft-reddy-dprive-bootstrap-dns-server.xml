<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-reddy-dprive-bootstrap-dns-server-01"
     ipr="trust200902">
  <front>
    <title abbrev="DoT/DoH server discovery">A Bootstrapping Procedure to
    Discover and Authenticate DNS-over-(D)TLS and DNS-over-HTTPS
    Servers</title>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="McAfee">McAfee, Inc.</organization>

      <address>
        <postal>
          <street>Embassy Golf Link Business Park</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560071</code>

          <country>India</country>
        </postal>

        <email>kondtir@gmail.com</email>
      </address>
    </author>

    <author fullname="Dan Wing" initials="D." surname="Wing">
      <organization></organization>

      <address>
        <postal>
          <street></street>

          <country>USA</country>
        </postal>

        <email>dan@danwing.org</email>
      </address>
    </author>

    <author fullname="Michael C. Richardson" initials="M."
            surname="Richardson">
      <organization>Sandelman Software Works</organization>

      <address>
        <postal>
          <street></street>

          <country>USA</country>
        </postal>

        <email>mcr+ietf@sandelman.ca</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <region></region>

          <code>35000</code>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date day="5" month="March" year="2019" />

    <workgroup>DPRIVE WG</workgroup>

    <abstract>
      <t>This document specifies mechanisms to automatically bootstrap
      endpoints (e.g., hosts, Customer Equipment) to discover and authenticate
      DNS-over-(D)TLS and DNS-over-HTTPS servers provided by a local
      network.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Traditionally a caching DNS server has been provided by the local
      network. This provides several benefits including low latency to that
      DNS server (due to its network proximity to the endpoint). However, if
      an endpoint is configured to use Internet-hosted or public
      DNS-over-(D)TLS <xref target="RFC7858"></xref> <xref
      target="RFC8094"></xref> or DNS-over-HTTPS <xref
      target="RFC8484"></xref> servers, the local DNS server cannot serve the
      DNS requests from the endpoints. If public DNS servers are used instead
      of using local DNS servers, the operational problems are listed
      below:</t>

      <t><list style="symbols">
          <t>"Split DNS" <xref target="RFC2775"></xref> to use the special
          internal-only domain names (e.g., "internal.example.com") in
          enterprise networks will not work, and ".local" and "home.arpa"
          names cannot be locally resolved in home networks.</t>

          <t>Content Delivery Networks (CDNs) that map traffic based on DNS
          may lose the ability to direct end-user traffic to a nearby cluster
          in cases where a DNS service is being used that is not affiliated
          with the local network and which does not send "EDNS Client Subnet"
          (ECS) information <xref target="RFC7871"></xref> to the CDN's DNS
          authorities <xref target="CDN"></xref>.</t>

          <t>Some clients have pre-configured specific public DNS servers
          (such as Mozilla using Cloudflare's DNS-over-HTTPS server). If
          endpoints continue to use hard-coded public DNS servers, this has a
          risk of relying on few centralized DNS services.</t>
        </list></t>

      <t>If public DNS servers are used instead of using local DNS servers,
      the following paragraph discusses the impact on Network-based
      security:</t>

      <t>Various network security services are provided by Enterprise, secure
      home and wall-gardened networks to protect endpoints (e.g,. Hosts, IoT
      devices). <xref target="I-D.camwinget-tls-use-cases"></xref> discusses
      some of the Network-based security use cases. These network security
      services act on DNS requests from endpoints. However, if an endpoint is
      configured to use public DNS-over-(D)TLS or DNS-over-HTTPS servers,
      network security services cannot act efficiently on DNS requests from
      the endpoints. In order to act on DNS requests from endpoints, network
      security services can block DNS-over-(D)TLS traffic by dropping outgoing
      packets to destination port 853. Identifying DNS-over-HTTPS traffic is
      far more challenging than DNS-over-(D)TLS traffic. Network security
      services can try to identify the domains offering DNS-over-HTTPS
      servers, and DNS-over-HTTPS traffic can be blocked by dropping outgoing
      packets to these domains. If the endpoint has enabled strict privacy
      profile (Section 5 of <xref target="RFC8310"></xref>), and the network
      security service blocks the traffic to the public DNS server, DNS
      service is not available to the endpoint and ultimately the endpoint
      cannot access Internet. If the endpoint has enabled opportunistic
      privacy profile (Section 5 of <xref target="RFC8310"></xref>), and the
      network security service blocks traffic to the public DNS server, the
      endpoint will either fallback to an encrypted connection without
      authenticating the DNS server provided by the local network or fallback
      to clear text DNS, and cannot exchange encrypted DNS messages. This can
      compromise the endpoint security and privacy; some of the potential
      privacy and security threats are listed below:</t>

      <t><list style="symbols">
          <t>Pervasive monitoring of DNS traffic.</t>

          <t>If the endpoint is an IoT device which is configured to use
          public DNS-over-(D)TLS or DNS-over-HTTPS servers, and if a policy
          enforcement point in the local network is programmed using a
          Manufacturer Usage Description (MUD) file <xref
          target="I-D.ietf-opsawg-mud"></xref> by a MUD manager to only allow
          intented communications to and from the IoT device, the policy
          enforcement point cannot enforce the Network Access Control List
          rules based on domain names (Section 8 of <xref
          target="I-D.ietf-opsawg-mud"></xref>).</t>

          <t>The network security service cannot prevent an endpoint from
          accessing malicious domains. </t>
        </list></t>

      <t>The DPRIVE and DoH working groups have not yet defined an automated
      mechanism to securely bootstrap the endpoints to discover and
      authenticate DNS-over-(D)TLS and DNS-over-HTTPS servers in the local
      network. The document proposes a mechanism to automatically bootstrap
      the endpoints to discover and authenticate the DNS-over-(D)TLS and
      DNS-over-HTTPS servers provided by the local network. The overall
      procedure can be structured into the following steps:<list
          style="symbols">
          <t>Bootstrapping phase (<xref target="bootstrap-endpoint"></xref>
          and <xref target="bootstrap-iot"></xref>) is meant to automatically
          bootstrap endpoints with local network's CA certificates and DNS
          server certificate.</t>

          <t>Discovery phase (<xref target="discovery"></xref>) is meant to
          discover the privacy-enabling protocols supported by the DNS server
          and usable DNS server IP addresses and port numbers.</t>

          <t>Connection handshake and service invocation: The DNS client
          initiates (D)TLS handshake with the DNS server learned in the
          discovery phase. Furthermore, DNS client uses the credentials
          discovered during the bootstrapping phase to validate the server
          certificate.</t>
        </list></t>

      <t>Note: The strict and opportunistic privacy profiles as defined in
      <xref target="RFC8310"></xref> only applies to DNS-over-(D)TLS
      protocols, there has been no such distinction made for DNS-over-HTTPS
      protocol. </t>
    </section>

    <section anchor="notation" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"></xref><xref target="RFC8174"></xref> when, and
      only when, they appear in all capitals, as shown here.</t>

      <t>(D)TLS is used for statements that apply to both Transport Layer
      Security <xref target="RFC8446"></xref> and Datagram Transport Layer
      Security <xref target="RFC6347"></xref>. Specific terms are used for any
      statement that applies to either protocol alone.</t>

      <t>This document uses the terms defined in <xref
      target="RFC8499"></xref>.</t>
    </section>

    <section anchor="bootstrap-endpoint"
             title="Bootstrapping Endpoint Devices">
      <t>The following steps explain the mechanism to automatically bootstrap
      an endpoint with the local network's CA certificates and DNS server
      certificate: </t>

      <t><list style="symbols">
          <t>Bootstrapping Remote Secure Key Infrastructures (BRSKI) discussed
          in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"></xref>
          provides a solution for secure automated bootstrap of devices. BRSKI
          specifies means to provision credentials on devices to be used to
          operationally access networks. In addition, BRSKI provides an
          automated mechanism for the bootstrap distribution of CA
          certificates from the EST server. <list style="numbers">
              <t>The endpoint authenticates to the local network and
              establishes provisional TLS connection with the registrar
              operating as the BRSKI-EST server. The endpoint discovers
              registrar using DNS-based Service Discovery <xref
              target="RFC6763"></xref>.</t>

              <t>The endpoint uses Salted Challenge Response Authentication
              Mechanism (SCRAM) <xref target="RFC7804"></xref> to perform
              mutual authentication with the discovered BRSKI-EST server.
              SCRAM provides a more robust authentication mechanism than a
              plaintext password protected by Transport Layer Security
              (TLS).</t>

              <t>If the BRSKI-EST server authentication is successful, the
              endpoint requests the full EST distribution of current CA
              certificates and validates the provisional TLS connection to the
              BRSKI-EST server. If the BRSKI-EST server certificate cannot be
              verified using the CA certificates downloaded, the TLS
              connection is immediately discarded and the endpoint abandons
              the attempt to bootstrap from the BRSKI-EST server and discards
              the CA certificates conveyed by the BRSKI-EST server. If the
              BRSKI-EST server certificate is verified using the CA
              certificates downloaded, the endpoint stores the CA certificates
              as Explicit Trust Anchor database entries. The endpoint uses the
              Explicit Trust Anchor database to validate the DNS server
              certificate. The endpoint needs to perform SCRAM authentication
              the first time it connects BRSKI-EST server. On subsequent
              connections to the BRSKI-EST server, the endpoint can validate
              the BRSKI-EST server certificate using the Explicit Trust Anchor
              database.</t>

              <t>The endpoint learns the End-Entity certificates <xref
              target="RFC8295"></xref> from the BRSKI-EST server. The
              certificate provisioned to the DNS server in the local network
              will be treated as a End-Entity certificate. The endpoint needs
              to identify the certificate provisioned to the DNS server. The
              SRV-ID identifier type <xref target="RFC6125"></xref> within
              subjectAltName entry can be used to identify the DNS server
              certificate. For example, DNS server certificate might include
              SRV-ID "_domain-s.example.net" along with DNS-ID "example.net".
              This specification defines SRV service label "domain-s" in <xref
              target="IANA"></xref>. As a reminder, the protocol component is
              not included in the SRV-ID <xref target="RFC4985"></xref>.</t>
            </list></t>
        </list></t>
    </section>

    <section anchor="bootstrap-iot" title="Bootstrapping IoT Devices and CPE">
      <t>The following steps explain the mechanism to automatically bootstrap
      IoT devices with local network's CA certificates and DNS server
      certificate. The below steps can also be used by CPE acting as DNS
      forwarders to discover and authenticate DNS-over-(D)TLS and
      DNS-over-HTTPS servers provided by the access networks.<list
          style="symbols">
          <t>The IoT device can use BRSKI discussed in <xref
          target="I-D.ietf-anima-bootstrapping-keyinfra"></xref> to
          automatically bootstrap the IoT device using the IoT manufacturer
          provisioned X.509 certificate, in combination with a registrar
          provided by the local network and IoT device manufacturer's
          authorizing service (MASA). <list style="numbers">
              <t>The IoT device authenticates to the local network using the
              IoT manufacturer provisioned X.509 certificate. The IoT device
              can request and get a voucher from the MASA service via the
              registrar. The voucher is signed by the MASA service and
              includes the local network's CA public key.</t>

              <t>The IoT device validates the signed voucher using the
              manufacturer installed trust anchor associated with the MASA,
              stores the CA's public key and validates the provisional TLS
              connection to the registrar.</t>

              <t>The IoT device requests the full Enrollment over Secure
              Transport (EST) <xref target="RFC7030"></xref> distribution of
              current CA certificates (Section 5.9.1 in <xref
              target="I-D.ietf-anima-bootstrapping-keyinfra"></xref>) from the
              registrar operating as a BRSKI-EST server. The IoT devices
              stores the CA certificates as Explicit Trust Anchor database
              entries. The IoT device uses the Explicit Trust Anchor database
              to validate the DNS server certificate.</t>

              <t>The IoT device learns the End-Entity certificates <xref
              target="RFC8295"></xref> from the BRSKI-EST server. The
              certificate provisioned to the DNS server in the local network
              will be treated as a End-Entity certificate. The IoT device
              needs to identify the certificate provisioned to the DNS server.
              The SRV-ID identifier type <xref target="RFC6125"></xref> within
              subjectAltName entry can be used to identify the DNS server
              certificate. For example, DNS server certificate might include
              SRV-ID "_domain-s.example.net" along with DNS-ID "example.net".
              This specification defines SRV service label "domain-s" in <xref
              target="IANA"></xref>. As a reminder, the protocol component is
              not included in the SRV-ID <xref target="RFC4985"></xref>.</t>
            </list></t>
        </list></t>
    </section>

    <section anchor="discovery" title="Discovery Procedure">
      <t>A DNS client discovers the DNS server in the local network supporting
      DNS-over-TLS, DNS-over-DTLS and DNS-over-HTTPS protocols by using the
      following discovery mechanism:</t>

      <t><list style="symbols">
          <t>The DNS client retrieves the authentication domain name for the
          DNS server from the DNS-ID identifier type within subjectAltName
          entry in the DNS server certificate.</t>

          <t>The DNS client then uses the authentication domain name for
          S-NAPTR <xref target="RFC3958"></xref> lookup to learn the protocols
          DNS-over-TLS, DNS-over-DTLS, and DNS-over-HTTPS supported by the DNS
          server and the DNS privacy protocol preferred by the DNS server
          administrators, as specified in <xref target="srvr"></xref> and
          <xref target="tag"> </xref>. This specification adds a SRV service
          label "domain-s" for privacy-enabling DNS servers. In the example
          below, for authentication domain name 'example.net', the resolution
          algorithm will result in the privacy-enabling protocols supported by
          the DNS server and usable DNS server IP addresses and port
          numbers.<figure anchor="fig-naptr-lookup">
              <artwork><![CDATA[   example.net.
   IN NAPTR 100 10 "" DPRIVE:dns.tls  "" dns1.example.net.
   IN NAPTR 200 10 "" DPRIVE:dns.dtls "" dns2.example.net.

   dns1.example.net.
   IN NAPTR 100 10 S DPRIVE:dns.tls "" _domain-s._tcp.example.net.

   dns2.example.net.
   IN NAPTR 100 10 S DPRIVE:dns.udp "" _domain-s._udp.example.net.

   _domain-s._tcp.example.net.
   IN SRV   0 0 853 a.example.net.

   _domain-s._udp.example.net.
   IN SRV   0 0 853 a.example.net.

   a.example.net.
   IN A        192.0.2.1
   IN AAAA     2001:db8:8:4::2
]]></artwork>

              <postamble></postamble>
            </figure> </t>

          <t>If DNS-over-HTTPS protocol is supported by the DNS server, the
          DNS client queries for the URI resource record type <xref
          target="RFC7553"></xref> to use the https URI scheme (Section 3 of
          <xref target="RFC8484"></xref>). In the example below, for
          authentication domain name 'example.net' and the URL for resolution
          is https://example.net/dns-query. The following URI resource records
          could be made available: <figure anchor="fig-uri-lookup">
              <artwork><![CDATA[   $ORIGIN example.net.
   _domain-s._tcp    IN URI 10 1 "https://example.net/dns-query"
]]></artwork>
            </figure></t>
        </list></t>

      <section anchor="srvr" title="Resolution">
        <t>Once the DNS client has retrieved the authentication domain name
        for the DNS server, an S-NAPTR lookup with 'DPRIVE' application
        service and the desired protocol tag is made to obtain information
        necessary to securely connect to the DNS server. The S-NAPTR lookup is
        performed using an recursive DNS resolver discovered from an untrusted
        source (such as DHCP).</t>

        <t>This specification defines "DPRIVE" as an application service tag
        (<xref target="serviceT"></xref>) and "dns.tls" (<xref
        target="dnstls"></xref>), "dns.dtls" (<xref target="dnsdtls"></xref>),
        and "dns.https" (<xref target="dnshttps"></xref>) as application
        protocol tags.</t>

        <t>If no DNS-specific S-NAPTR records can be retrieved, the discovery
        procedure fails for this authentication domain name. However, before
        retrying a lookup that has failed, a DNS client MUST wait a time
        period that is appropriate for the encountered error (e.g., NXDOMAIN,
        timeout, etc.).</t>
      </section>
    </section>

    <section anchor="auth" title="Connection handshake and service invocation">
      <t>The DNS client initiates (D)TLS handshake with the DNS server, the
      server presents its certificate in ServerHello message, and the DNS
      client matches the DNS server certificate downloaded in step 4 in <xref
      target="bootstrap-endpoint"></xref> and <xref
      target="bootstrap-iot"></xref> with the certificate provided by the DNS
      server in (D)TLS handshake. If the match is successful, the DNS client
      validates the server certificate using the Explicit Trust Anchor
      database entries downloaded in step 3 in <xref
      target="bootstrap-endpoint"></xref> and <xref
      target="bootstrap-iot"></xref>. </t>

      <t>If the match is successful and server certificate is successfully
      validated, the client continues with the connection as normal.
      Otherwise, the client MUST treat the server certificate validation
      failure as a non-recoverable error. If the DNS client cannot reach or
      establish an authenticated and encrypted connection with the
      privacy-enabling DNS server provided by the local network, the DNS
      client can fallback to the privacy-enabling public DNS server.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The bootstrapping procedure to discover and authenticate
      DNS-over-(D)TLS and DNS-over-HTTPS Servers MUST be enabled by the
      endpoint in a trusted network (e.g. Enterprise, Secure home networks)
      and disabled in a untrusted network (e.g. Public WiFi network), similar
      to the way VPN connection from the endpoint to a VPN gateway is
      disconnected in a trusted network and VPN connection is established in a
      untrusted network.</t>

      <t>If the endpoint has enabled strict privacy profile, and the network
      security service blocks the traffic to the privacy-enabling public DNS
      server, a hard failure occurs and the user is notified. The user has a
      choice to switch to another network or if the user trusts the network,
      the user can enable strict privacy profile with the DNS-over-(D)TLS or
      DNS-over-HTTPS server discovered in the network instead of downgrading
      to opportunistic privacy profile.</t>

      <t>The primary attacks against the methods described in <xref
      target="discovery"></xref> are the ones that would lead to impersonation
      of a DNS server and spoofing the DNS response to indicate that the DNS
      server does not support any privacy-enabling protocols. To protect
      against DNS-vectored attacks, secured DNS (DNSSEC) can be used to ensure
      the validity of the DNS records received. The explicit trust anchor
      database entries downloaded in step 3 in <xref
      target="bootstrap-endpoint"></xref> and <xref
      target="bootstrap-iot"></xref> can be used by the endpoint to validate
      the DNSSEC signature. Impersonation of the DNS server is prevented by
      validating the certificate presented by the DNS server. If the BRSKI-EST
      server conveys the DNS server certificate, but the S-NAPTR lookup
      indicates that the DNS server does not support any privacy-enabling
      protocols, the client can detect the DNS response is spoofed. </t>

      <t>Security considerations in <xref
      target="I-D.ietf-anima-bootstrapping-keyinfra"></xref> and <xref
      target="RFC7804"></xref> need to be taken into consideration.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>IANA is requested to allocate the SRV service name of "domain-s" for
      DNS-over-(D)TLS and DNS-over-HTTPS. </t>

      <section anchor="tag"
               title="Application Service &amp; Application Protocol Tags">
        <t>This document requests IANA to make the following allocations from
        the registry available at:
        https://www.iana.org/assignments/s-naptr-parameters/s-naptr-parameters.xhtml.</t>

        <section anchor="serviceT"
                 title="DNS Application Service Tag Registration">
          <t><list style="symbols">
              <t>Application Protocol Tag: DPRIVE</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Contact Information: &lt;one of the authors&gt;</t>
            </list></t>
        </section>

        <section anchor="dnstls"
                 title="dns.tls Application Protocol Tag Registration">
          <t><list style="symbols">
              <t>Application Protocol Tag: dns.tls</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Contact Information: &lt;one of the authors&gt;</t>
            </list></t>
        </section>

        <section anchor="dnsdtls"
                 title="dns.dtls Application Protocol Tag Registration">
          <t><list style="symbols">
              <t>Application Protocol Tag: dns.dtls</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Contact Information: &lt;one of the authors&gt;</t>
            </list></t>
        </section>

        <section anchor="dnshttps"
                 title="dns.https Application Protocol Tag Registration">
          <t><list style="symbols">
              <t>Application Protocol Tag: dnshttps</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Contact Information: &lt;one of the authors&gt;</t>
            </list></t>
        </section>
      </section>
    </section>

    <section anchor="acknowledgments" title="Acknowledgments">
      <t>Thanks to Joe Hildebrand, Harsha Joshi, Shashank Jain, Patrick
      McManus and Sara Dickinson for the discussion and comments.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include='reference.RFC.8174'?>

      <?rfc include="reference.RFC.6125"?>

      <?rfc include="reference.RFC.7030"?>

      <?rfc include="reference.RFC.8295"?>

      <?rfc include="reference.RFC.7804"?>

      <?rfc include="reference.RFC.8484"?>

      <?rfc include="reference.RFC.7858"?>

      <?rfc include="reference.RFC.8094"?>

      <?rfc include="reference.RFC.3958"?>

      <?rfc include="reference.RFC.6763"?>

      <?rfc include="reference.RFC.7553"?>

      <?rfc include="reference.RFC.8499"?>

      <?rfc include="reference.RFC.8446"?>

      <?rfc include="reference.RFC.6347"?>

      <?rfc include="reference.RFC.4985"?>

      <?rfc include='reference.I-D.ietf-anima-bootstrapping-keyinfra'?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.8310"?>

      <?rfc include="reference.RFC.2775"?>

      <?rfc include="reference.RFC.7871"?>

      <?rfc include='reference.I-D.ietf-opsawg-mud'?>

      <?rfc include='reference.I-D.camwinget-tls-use-cases'?>

      <reference anchor="CDN"
                 target="https://conferences.sigcomm.org/sigcomm/2015/pdf/papers/p167.pdf">
        <front>
          <title>End-User Mapping: Next Generation Request Routing for Content
          Delivery</title>

          <author>
            <organization></organization>
          </author>

          <date year="2015" />
        </front>
      </reference>
    </references>
  </back>
</rfc>
